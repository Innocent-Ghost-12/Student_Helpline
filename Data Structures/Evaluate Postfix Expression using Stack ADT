#include <stdio.h>
#include <stdlib.h>
struct stack
{
    int size;
    int top;
    int *arr;
};

int isEmpty(struct stack *S)
{
    if (S->top == -1)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
int isFull(struct stack *S)
{
    if (S->top == S->size - 1)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
void push(struct stack *S, int val)
{
    if(isFull(S))
    {
        printf("Stack OverFlow");
    }
    else
    {
        S->top++;
        S->arr[S->top] = val;
        printf("Item pushed %d", S->arr[S->top]);
    }
}

int pop(struct stack *S)
{
    int val = -1;
    if(isEmpty(S))
    {
        printf("Stack OverFlow");
    }
    else
    {
        val = S->arr[S->top];
        S->top--;
        printf("Item pop %d", val);
    }
    return val;
}

void display(struct stack *S)
{
    for (int i = 0; i <= S->top; i++)
    {
        printf("%d -> %d",i,S->arr[i]);
    }
    
}

int main()
{
    struct stack *S;
    S->size = 100;
    S->top = -1;
    int *arr = (int *)malloc((S->size) * sizeof(int));



    return 0;
}
